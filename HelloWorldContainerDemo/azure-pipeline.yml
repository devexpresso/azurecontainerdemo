trigger:
  - master

pool:
  vmImage: 'ubuntu-16.04'

variables:
  dockerComposeFile: '**/docker-compose.yml'
  additionalDockerComposeFiles: '**/docker-compose-production.yml'
  azureSubscriptionEndpoint: azure_service_connection
  azureContainerRegistry: containerdemoregistry
  helloWorldWebImageName: containerdemoregistry.azurecr.io/helloworldweb:V1
  helloWorldServiceImageName: containerdemoregistry.azurecr.io/helloworldservice:v1
  dockerLoginId: containerdemoregistry
  dockerPassword: e46chrcXUYpYcRBPcSRy37jl=fz/DK+P
  registryServer: containerdemoregistry.azurecr.io


steps:
- task: DockerInstaller@0
  displayName:  'Docker Installer'
  inputs:
    dockerVersion: 17.09.0-ce
    releaseType: stable

- script: |
    docker-compose -f $(dockerComposeFile) -f $(additionalDockerComposeFiles) up -d
  displayName: 'Build docker image'

- script: |
    docker login -u $(dockerLoginId) -p "e46chrcXUYpYcRBPcSRy37jl=fz/DK+P" $(registryServer)
    docker push $(helloWorldWebImageName)
    docker push $(helloWorldServiceImageName)
  displayName: 'Push docker image to ACR'

# - task: DockerCompose@0
#   displayName:  'Build and Publish images'
#   inputs:
#     action: Build and Publish Images
#     azureSubscriptionEndpoint: $(azureSubscriptionEndpoint)
#     azureContainerRegistry: $(azureContainerRegistry)
#     dockerComposeFile: **/docker-compose.yml
#     additionalDockerComposeFiles: **/docker-compose-production.yml
#     qualifyImageNames: true
#     dockerComposeCommand: rm

